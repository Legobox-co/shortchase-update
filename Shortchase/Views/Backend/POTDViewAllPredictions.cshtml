@model POTDViewPredictionsListDto
@{
    Layout = "_DashboardLayout";
}

<div class="header bg-gradient-primary py-3 ">
    <div class="container-fluid">
        <div class="header-body">
            <div class="row">
                <div class="col-sm-12 col-md-12 col-lg-12">
                    <h1 class="text-white text-left mb-0">
                        @*<i class="fas fa-star"></i>*@
                        <img src="@Url.Content("~/img/newicons/potd-posts.png")" class="img-fluid" width="40px" />&nbsp;
                        POTD: View Predictions
                    </h1>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="pt-3">
    <div class="container-fluid">
        <div class="py-2">
            <a asp-action="POTD" asp-controller="Backend" class="btn btn-link timezoneoffset"><img src="@Url.Content("~/img/newicons/back.png")" class="img-fluid" width="30px" /></a>
        </div>
        <div class="card shadow-sm">
            <div class="card-body py-3 px-3">
                <h5 class="m-0 text-uppercase">POTD: </h5>
                <table class="table table-striped table-bordered w-100" cellspacing="0">
                    <thead>
                        <tr>
                            <th class="text-uppercase">Title</th>
                            <th class="text-uppercase">Pick</th>
                            <th class="text-uppercase">Market</th>
                            <th class="text-uppercase">Tip</th>
                            <th class="text-uppercase">Start Time</th>
                            <th class="text-uppercase">Finish Time</th>
                            <th class="text-uppercase">Venue</th>
                            <th class="text-uppercase">Status</th>
                        </tr>
                    </thead>
                    <tbody>

                        @{
                            string subcategory = "No subcategory";
                            int? subcategoryId = null;
                            if (Model.POTD.SubCategoryId.HasValue)
                            {
                                subcategory = Model.POTD.SubCategory.Name;
                                subcategoryId = Model.POTD.SubCategory.Id;
                            }
                            string status = "";
                            bool canEditOrDelete = true;
                            if (Model.POTD.Pick.StartTime < DateTime.UtcNow && DateTime.UtcNow < Model.POTD.Pick.FinishTime)
                            {
                                status = "Active";
                            }
                            else
                            {
                                if (DateTime.UtcNow < Model.POTD.Pick.StartTime && DateTime.UtcNow < Model.POTD.Pick.FinishTime)
                                {
                                    status = "Active";
                                }
                                else
                                {
                                    status = "Inactive";
                                    //canEditOrDelete = false;
                                }
                            }



                            string dateStart = DateHelper.ToISOString(Model.POTD.Pick.StartTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())));
                            string dateFinish = DateHelper.ToISOString(Model.POTD.Pick.FinishTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())));

                        }
                        <tr>
                            <td>@Model.POTD.Title</td>
                            <td>@Model.POTD.Pick.Team1 vs @Model.POTD.Pick.Team2</td>
                            <td>@Model.POTD.Market.Name</td>
                            <td>@Model.POTD.Tip.Description</td>
                            <td>@DateHelper.DateFormat(Model.POTD.Pick.StartTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())))</td>
                            <td>@DateHelper.DateFormat(Model.POTD.Pick.FinishTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())))</td>
                            <td>@Model.POTD.Venue</td>
                            <td>@status</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <br />
        <div class="card shadow-sm">
            <div class="card-body py-3 px-3">
                <h4>Predictions</h4>
                @if (Model.Predictions == null || Model.Predictions.Count() <= 0)
                {
                    <p class="mb-0 text-small font-weight-900">
                        No predictions found on database for this POTD.
                    </p>
                }
                else
                {
                    <table id="POTDDynamicPredictionsTable" class="table table-striped table-bordered table-responsive w-100 " cellspacing="0">
                        <thead class="w-100">
                            <tr>
                                <th class="text-uppercase" width="20%">Date</th>
                                <th class="text-uppercase" width="30%">Username</th>
                                <th class="text-uppercase" width="20%">Market</th>
                                <th class="text-uppercase" width="20%">Tip</th>
                                <th class="text-uppercase" width="20%">Verified</th>
                            </tr>
                        </thead>
                        <tbody class="w-100">
                            @foreach (var item in Model.Predictions)
                            {
                                string itemstatus = "";
                                string itemstatusWrapper = "";
                                bool showValidateButton = false;
                                bool showInValidateButton = false;
                                if (item.VerifiedAsCorrect.HasValue)
                                {
                                    if (item.VerifiedAsCorrect.Value)
                                    {
                                        showValidateButton = false;
                                        showInValidateButton = true;
                                        itemstatus = "fas fa-check";
                                        itemstatusWrapper = "bg-success";
                                    }
                                    else
                                    {
                                        showValidateButton = true;
                                        showInValidateButton = false;
                                        itemstatus = "fas fa-times";
                                        itemstatusWrapper = "bg-danger";
                                    }
                                }
                                else
                                {
                                    showValidateButton = true;
                                    showInValidateButton = false;
                                    itemstatus = "fas fa-minus";
                                    itemstatusWrapper = "bg-light";
                                }

                                <tr>

                                    <td id="DatePredicted-@item.Id" data-value="@item.DatePredicted" data-order="@item.DatePredicted">@DateHelper.DateFormat(item.DatePredicted.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())))</td>
                                    <td id="User-@item.Id" data-value="@item.PredictedById">
                                        @item.PredictedBy.FirstName @item.PredictedBy.LastName
                                        <br /> <span class="text-muted text-lowercase">@item.PredictedBy.Email</span>
                                    </td>
                                    <td id="Market-@item.Id" data-value="@item.MarketId">@item.Market.Name</td>
                                    <td id="Tip-@item.Id" data-value="@item.TipId">@item.Tip.Description</td>
                                    <td id="Correct-@item.Id" data-value="">
                                        <span class="text-white py-1 px-2 border-radius-low @itemstatusWrapper"><i class="@itemstatus"></i></span>
                                        @*@if (item.DateVerified.HasValue)
                                            {
                                                <text><br />@DateHelper.DateFormat(item.DateVerified.Value.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())))</text>
                                            }*@
                                        <br />
                                        <br />
                                        <button class="btn btn-sm btn-success PredictionValidationBtn" data-type="true" data-id="@item.Id"><i class="fas fa-check"></i> Valid</button>

                                        <button class="btn btn-sm btn-warning PredictionValidationBtn" data-type="false" data-id="@item.Id"><i class="fas fa-times"></i> Invalid</button>

                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>

    </div>
</div>
<input id="POTDPredictionValidationURL" hidden value="@Url.Action("POTDPredictionValidation", "Backend")" />





@section Scripts{
    <script src="@Url.Content("~/app/Backend/POTDViewAllPredictions.js")" asp-append-version="true"></script>
}