@model POTDListingListDto
@{
    Layout = "_DashboardLayout";
}

<div class="header bg-gradient-primary py-3 ">
    <div class="container-fluid">
        <div class="header-body">
            <div class="row">
                <div class="col-sm-12 col-md-8 col-lg-8">
                    <h1 class="text-white text-left mb-0">
                        @*<i class="fas fa-star"></i>*@
                        <img src="@Url.Content("~/img/newicons/potd-posts.png")" class="img-fluid" width="40px" />&nbsp;
                        Predictions
                    </h1>
                </div>
                <div class="col-sm-12 col-md-4 col-lg-4 text-right">
                    <button class="btn btn-dark-as-homepage AddPOTDListingModalBtn">
                        <i class="fas fa-plus"></i> Add
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="pt-3">
    <div class="container-fluid">
        <div class="card shadow-sm">
            <div class="card-body py-3 px-3">
                @if (Model.POTDListings == null || Model.POTDListings.Count() <= 0)
                {
                    <p class="mb-0 text-small font-weight-900">
                        No listings found on database.
                    </p>
                }
                else
                {
                    <div class="row">
                        <div class="col-sm-12 col-md-12 col-lg-12 text-right">
                            <button class="btn btn-dark-as-homepage btn-sm" id="SelectAllRowsBtn" data-power="select" data-totalselected="0" data-totalelements="@Model.POTDListings.Count">Select All</button>
                            <button class="btn btn-danger btn-sm batchaction" data-actiontype="delete" data-action="@Url.Action("DeletePOTDListingBatch", "Backend")"><i class="fas fa-trash"></i> Delete All</button>
                        </div>
                    </div>
                    <table id="POTDListingList" class="table table-striped table-bordered w-100" cellspacing="0">
                        <thead>
                            <tr>
                                <th class="text-uppercase"></th>
                                <th class="text-uppercase"></th>
                                <th class="text-uppercase">Title</th>
                                <th class="text-uppercase">Pick</th>
                                <th class="text-uppercase">Market</th>
                                <th class="text-uppercase">Tip</th>
                                <th class="text-uppercase">Start Time</th>
                                <th class="text-uppercase">Finish Time</th>
                                <th class="text-uppercase">Venue</th>
                                @*<th class="text-uppercase">Result</th>*@
                                <th class="text-uppercase">Background Image</th>
                                <th class="text-uppercase">Category</th>
                                <th class="text-uppercase">Subcategory</th>
                                <th class="text-uppercase">Status</th>
                                <th class="text-uppercase">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.POTDListings)
                            {
                                bool canInformResult = false;
                                string subcategory = "No subcategory";
                                int? subcategoryId = null;
                                if (item.SubCategoryId.HasValue)
                                {
                                    subcategory = item.SubCategory.Name;
                                    subcategoryId = item.SubCategory.Id;
                                }
                                if (item.Pick.Team1PhotoPath == null)
                                {
                                    item.Pick.Team1PhotoPath = "d29c0059-da71-4538-8119-cec6da278b37_WEST BROM.jpg";
                                }
                                if (item.Pick.Team2PhotoPath == null)
                                {
                                    item.Pick.Team2PhotoPath = "1acdcf62-01b1-486c-a7ed-b1880de24545_burney.jpg";
                                }

                                string team1 = Url.Content("~/images" + item.Pick.Team1PhotoPath);
                                string team2 = Url.Content("~/images" + item.Pick.Team2PhotoPath);
                                //string Team1Photo = ViewData["root"].ToString() + item.Pick.Team1Photo;
                                //string Team2Photo = ViewData["root"].ToString() + item.Pick.Team2Photo;


                                //string imageURL = ImageHelper.ConvertImageToBase64(ViewData["root"].ToString() + item.BackgroundImage);
                                string imageURL =  item.BackgroundImage.Replace("\\wwwroot\\","~\\");
                                string status = "";
                                bool canEditOrDelete = true;
                                if (item.Pick.StartTime < DateTime.UtcNow && DateTime.UtcNow < item.Pick.FinishTime)
                                {
                                    status = "Active";
                                    canInformResult = false;
                                }
                                else
                                {
                                    if (DateTime.UtcNow < item.Pick.StartTime && DateTime.UtcNow < item.Pick.FinishTime)
                                    {
                                        status = "Active";
                                        canInformResult = false;
                                    }
                                    else
                                    {
                                        status = "Inactive";
                                        canEditOrDelete = false;
                                        canInformResult = true;
                                    }
                                }



                                string dateStart = DateHelper.ToISOString(item.Pick.StartTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())));
                                string dateFinish = DateHelper.ToISOString(item.Pick.StartTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())));
                                string result = "No result yet";
                                if (!string.IsNullOrWhiteSpace(item.Result))
                                {
                                    result = item.Result;
                                }

                        <tr>
                            <td></td>
                            <td id="SelectWrapper-@item.Id" class="rowSelectors text-center" data-controller="SelectAllRowsBtn" data-selected="false" data-itemid="@item.Id"></td>
                            <td id="Title-@item.Id" data-value="@item.Title">@item.Title</td>
                            <td id="PickId-@item.Id" data-value="@item.PickId">
                                @if (item.Pick.Team1PhotoPath == null)
                                {
                        @item.Pick.Team1 }
                                            else
                                            {
                        <img src="@team1 ?? Null" width="50" height="50" />}
                                vs
                                @if (item.Pick.Team2PhotoPath == null)
                                {
                        @item.Pick.Team2 }
                                            else
                                            {
                        <img src="@team2 ?? Null" width="50" height="50" /> @item.Pick.Team2}
                            </td>
                            <td id="MarketId-@item.Id" data-value="@item.MarketId">@item.Market.Name</td>
                            <td id="TipId-@item.Id" data-value="@item.TipId">@item.Tip.Description</td>
                            <td id="StartTime-@item.Id" data-value="@dateStart">@DateHelper.DateFormat(item.Pick.StartTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())))</td>
                            <td id="FinishTime-@item.Id" data-value="@dateFinish">@DateHelper.DateFormat(item.Pick.FinishTime.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())))</td>

                            <td id="Venue-@item.Id" data-value="@item.Venue">@item.Venue</td>
                            @*<td id="Result-@item.Id" data-value="@item.Result">
            @result
            @if (item.DateResultInformed.HasValue)
            {
                <br />
                <span class="text-muted text-smaller">@DateHelper.DateFormat(item.DateResultInformed.Value.FromUTCData(Convert.ToInt32(ViewData["TimezoneOffset"].ToString())))</span>
            }
            @if (canInformResult)
            {

                <br />
                <button class="btn btn-sm btn-primary InformResultBtn" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Inform result"><i class="fas fa-check"></i> Inform result</button>
            }
        </td>*@
                            <td id="BackgroundImage-@item.Id" data-value="@imageURL"><img class="img-fluid" src="@imageURL" style="max-width: 100px;" /></td>
                            <td id="CategoryId-@item.Id" data-value="@item.CategoryId">@item.Category.Name</td>
                            <td id="SubCategoryId-@item.Id" data-value="@subcategoryId">@subcategory</td>
                            <td id="Status-@item.Id" data-value="@status">@status</td>
                            <td>
                                <a class="btn btn-sm btn-info timezoneoffset" asp-action="POTDViewAllPredictions" asp-controller="Backend" asp-route-Id="@item.Id" data-toggle="tooltip" data-placement="top" title="View Predictions">View Predictions</a>
                                <a class="btn btn-sm btn-warning timezoneoffset" asp-action="POTDLiveReporting" asp-controller="Backend" asp-route-Id="@item.Id" data-toggle="tooltip" data-placement="top" title="Live Reporting">Live Reporting</a>
                                @if (canEditOrDelete)
                                {
                        <button class="btn btn-sm btn-primary EditItemBtn" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Edit">Edit</button>
                                                <button class="btn btn-sm btn-danger DeleteItemBtn" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Delete">Delete</button>}
                                @if (!string.IsNullOrWhiteSpace(item.Category.APIURL))
                                {
                        <button class="btn btn-sm btn-info ValidateAllPredictionsBtn" data-id="@item.Id" data-toggle="tooltip" data-placement="top" title="Validate via API">Validate via API</button>}


                            </td>
                        </tr>}
                        </tbody>
                    </table>
                }
            </div>
        </div>

    </div>
</div>


<!-- Add Modal -->
<partial name="Partials/POTDListing_AddModal" model="@Model" />
<partial name="Partials/POTDListing_EditModal" model="@Model" />
<partial name="Partials/POTDListing_InformResultModal" model="@Model" />
<partial name="Partials/POTDListing_ViewPredictionsModal" />


<input id="DeletePOTDListingURL" hidden value="@Url.Action("DeletePOTDListing", "Backend")" />
<input id="GetDependentDataFromCategoryURL" hidden value="@Url.Action("GetDependentDataFromCategory", "Home")" />
<input id="GetDependentDataFromMarketURL" hidden value="@Url.Action("GetDependentDataFromMarket", "Home")" />
<input id="GetPredictionsForPOTDURL" hidden value="@Url.Action("POTDViewPredictions", "Backend")" />
<input id="POTDPredictionValidationURL" hidden value="@Url.Action("POTDPredictionValidation", "Backend")" />
<input id="POTDValidateAllPredictionsURL" hidden value="@Url.Action("POTDValidateAllPredictions", "Backend")" />
<input id="LoggedInUserID" hidden value="@User.Identity.Id()" />

@section Scripts{
    <script src="@Url.Content("~/app/Backend/POTD.js")" asp-append-version="true"></script>
}